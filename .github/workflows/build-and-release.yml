name: Build and Release

on:
  push:
    branches:
      - '**'
    tags:
      - v**

jobs:
  build:
    name: Build Package
    runs-on: windows-latest

    steps:
      - name: Check out repository, with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x"

      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Install windows 10 SDK
        uses: GuillaumeFalourd/setup-windows10-sdk-action@v2
        with:
          sdk-version: '22000'

      - name: Add Win10 SDK to PATH
        run: |
          Add-Content $env:GITHUB_PATH "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22000.0\x64"

      - name: Build x64 and ARM64
        run: |
          dotnet restore
          dotnet msbuild TailscaleClient.csproj -t:Rebuild -p:Platform=x64 -p:Configuration=Release -p:OutDir="./dist/x64/"
          dotnet msbuild TailscaleClient.csproj -t:Rebuild -p:Platform=arm64 -p:Configuration=Release -p:OutDir="./dist/arm64/"

      - name: Write version to file, trim trailing newline
        run: |
          echo $(nbgv get-version -v SimpleVersion) > ./dist/version.txt

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  release:
    name: Release Package
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Install packaging tools
        run: |
          dotnet tool install -g vpk

      - name: Sync vpk to current version
        run: |
          vpk download http --url https://tsc.xirreal.dev/ -c win-x64
          vpk download http --url https://tsc.xirreal.dev/ -c win-arm64

      - name: Package x64
        run: |
          vpk [win] pack --packId TailscaleClient --packVersion "$(cat ./version.txt | tr -d '\r\n')" --packDir ./x64 --channel win-x64 --framework net8.0-x64-runtime -y

      - name: Package arm64
        run: |
          vpk [win] pack --packId TailscaleClient --packVersion "$(cat ./version.txt | tr -d '\r\n')" --packDir ./arm64 --channel win-arm64 --framework net8.0-arm64-runtime -y

      - name: Upload to R2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: auto
          AWS_ENDPOINT_URL: ${{ secrets.S3_ENDPOINT_URL }}
        run: |
          aws s3 sync --checksum-algorithm CRC32 ./Releases s3://tsc/

      - name: Create a new release
        uses: softprops/action-gh-release@v2
        with:
          files: TailscaleClient-win*